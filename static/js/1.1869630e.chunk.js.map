{"version":3,"sources":["components/Dialogs/dialogs.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs__wrapper","dialogs","dialog","name","active","messages","message","outgoing","incoming","messageWrap","newMessage","messagesWrapper","textarea","sendButton","Dialog","props","react_default","a","createElement","react_router_dom","className","concat","styles","to","id","Avatar","src","avatar","Message","classes","in","out","direction","maxLength300","maxLengthCreator","MessageForm","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Textarea","type","MessageFormRedux","reduxForm","form","Dialogs","dialogElements","dialogsData","dialogData","map","d","Dialogs_Dialog_Dialog","key","messageElemets","messageData","m","Dialogs_Message_Message","values","addNewMessage","compose","connect","state","withAuthRedirect"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,iBAAA,kCAAAC,QAAA,yBAAAC,OAAA,wBAAAC,KAAA,sBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,yBAAAC,SAAA,0BAAAC,SAAA,0BAAAC,YAAA,6BAAAC,WAAA,4BAAAC,gBAAA,iCAAAC,SAAA,0BAAAC,WAAA,4HCaHC,EATA,SAACC,GACd,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,UAAS,GAAAC,OAAKC,IAAOpB,QAAUqB,GAAI,YAAYR,EAAMb,OAAOsB,IACnER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,IAAKX,EAAMb,OAAOyB,OAAQxB,KAAMY,EAAMb,OAAOC,OACrDa,EAAAC,EAAAC,cAAA,QAAME,UAAWE,IAAOnB,MAAOY,EAAMb,OAAOC,QCQrCyB,EAdC,SAACb,GACf,IAAIc,EAAU,CACZC,GAAIR,IAAOd,SACXuB,IAAKT,IAAOf,UAEd,OACES,EAAAC,EAAAC,cAAA,OAAKE,UAAS,GAAAC,OAAKC,IAAOhB,QAAZ,KAAAe,OAAuBQ,EAAQd,EAAMT,QAAQ0B,aACzDhB,EAAAC,EAAAC,cAAA,QAAME,UAAWE,IAAOb,aACrBM,EAAMT,QAAQA,oCCLjB2B,EAAeC,YAAiB,KAWvBC,EATK,SAACpB,GACnB,OACEC,EAAAC,EAAAC,cAAA,QAAMkB,SAAUrB,EAAMsB,aAAcjB,UAAWE,IAAOZ,YACpDM,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOnC,KAAK,aAAaoC,YAAY,oBAAoBC,SAAU,CAACC,IAAUR,GAAeS,UAAWC,IAAUvB,UAAWE,IAAOV,WACpII,EAAAC,EAAAC,cAAA,UAAQ0B,KAAK,SAASxB,UAAWE,IAAOT,YAAxC,qBCaAgC,EAAmBC,YAAU,CAACC,KAAM,oBAAjBD,CAAsCX,GAEhDa,EApBC,SAACjC,GACb,IAAIkC,EAAiBlC,EAAMmC,YAAYC,WAAWC,IAAI,SAACC,GAAD,OAAOrC,EAAAC,EAAAC,cAAEoC,EAAF,CAASC,IAAOF,EAAE7B,GAAItB,OAAWmD,MAC1FG,EAAiBzC,EAAMmC,YAAYO,YAAYL,IAAI,SAACM,GAAD,OAAO1C,EAAAC,EAAAC,cAAEyC,EAAF,CAAUJ,IAAQG,EAAElC,GAAKlB,QAAYoD,MAKnG,OACE1C,EAAAC,EAAAC,cAAA,OAAKE,UAAaE,IAAOtB,kBACvBgB,EAAAC,EAAAC,cAAA,OAAKE,UAAaE,IAAOrB,SAAzB,IAAoCgD,EAApC,KACAjC,EAAAC,EAAAC,cAAA,OAAKE,UAAaE,IAAOX,iBACvBK,EAAAC,EAAAC,cAAA,OAAKE,UAAaE,IAAOjB,UAAzB,IAAsCmD,EAAtC,KACAxC,EAAAC,EAAAC,cAAC2B,EAAD,CAAkBT,SATP,SAACwB,GAChB7C,EAAM8C,cAAcD,EAAOlD,iDCGlBoD,sBACXC,YAPkB,SAACC,GACrB,MAAO,CACLd,YAAac,EAAMd,cAKM,CAACW,oBAC1BI,IAFWH,CAGbd","file":"static/js/1.1869630e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs__wrapper\":\"dialogs_dialogs__wrapper__3pKgy\",\"dialogs\":\"dialogs_dialogs__2AR0P\",\"dialog\":\"dialogs_dialog__3IHCa\",\"name\":\"dialogs_name__3ETGi\",\"active\":\"dialogs_active__deXoG\",\"messages\":\"dialogs_messages__vm8Qt\",\"message\":\"dialogs_message__TQ-2X\",\"outgoing\":\"dialogs_outgoing__RYvjr\",\"incoming\":\"dialogs_incoming__3TGCM\",\"messageWrap\":\"dialogs_messageWrap__7N3sY\",\"newMessage\":\"dialogs_newMessage__a5fc_\",\"messagesWrapper\":\"dialogs_messagesWrapper__3Bmaf\",\"textarea\":\"dialogs_textarea__24EsE\",\"sendButton\":\"dialogs_sendButton__1DPaL\"};","import React from 'react';\nimport styles from './../dialogs.module.css';\nimport {NavLink} from 'react-router-dom';\nimport Avatar from './../../Shared/Avatar';\n\nconst Dialog = (props) => {\n  return (\n      <NavLink className={`${styles.dialog}`} to={'/dialogs/'+props.dialog.id}>\n        <Avatar src={props.dialog.avatar} name={props.dialog.name} />\n        <span className={styles.name}>{props.dialog.name}</span>\n      </NavLink>\n  )\n}\n\nexport default Dialog;\n","import React from 'react';\nimport styles from './../dialogs.module.css';\n\nconst Message = (props) => {\n  let classes = {\n    in: styles.incoming,\n    out: styles.outgoing\n  }\n  return (\n    <div className={`${styles.message} ${classes[props.message.direction]}`}>\n      <span className={styles.messageWrap}>\n        {props.message.message}\n      </span>\n    </div>\n  )\n}\n\nexport default Message;\n","import React from 'react';\nimport {Field} from 'redux-form';\nimport styles from './../dialogs.module.css'\nimport {required, maxLengthCreator} from './../../Shared/Validator.js';\nimport {Textarea} from './../../Shared/Textarea/Textarea.jsx'\n\nconst maxLength300 = maxLengthCreator(300);\n\nconst MessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className={styles.newMessage}>\n      <Field name=\"newMessage\" placeholder=\"enter new message\" validate={[required, maxLength300]} component={Textarea} className={styles.textarea}></Field>\n      <button type=\"submit\" className={styles.sendButton}>Submit</button>\n    </form>\n  )\n}\n\nexport default MessageForm;\n","import React from 'react';\nimport styles from './dialogs.module.css';\nimport Dialog from './Dialog/Dialog.jsx';\nimport Message from './Message/Message.jsx';\nimport MessageForm from './Message/MessageForm.jsx';\nimport {reduxForm} from 'redux-form';\n\nconst Dialogs = (props) => {\n    let dialogElements = props.dialogsData.dialogData.map((d) => < Dialog key = {d.id} dialog = { d } />);\n    let messageElemets = props.dialogsData.messageData.map((m) => < Message key = { m.id } message = { m } />);\n    let addMessage = (values) => {\n      props.addNewMessage(values.newMessage);\n    };\n\n    return (\n      <div className = {styles.dialogs__wrapper}>\n        <div className = {styles.dialogs}> {dialogElements} </div>\n        <div className = {styles.messagesWrapper}>\n          <div className = {styles.messages} > {messageElemets} </div>\n          <MessageFormRedux onSubmit={addMessage}/>\n        </ div>\n      </ div>\n    )\n};\n\nconst MessageFormRedux = reduxForm({form: \"dialogAddMessage\"})(MessageForm);\n\nexport default Dialogs;\n","import React from 'react';\nimport Dialogs from './Dialogs.jsx';\nimport { addNewMessage } from './../../redux/dialog-reducer.js';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport withAuthRedirect from './../../hoc/withAuthRedirect.js';\nimport {compose} from 'redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsData: state.dialogsData\n  }\n};\n\nexport default compose(\n    connect(mapStateToProps, {addNewMessage}),\n    withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}