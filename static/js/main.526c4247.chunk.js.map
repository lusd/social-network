{"version":3,"sources":["components/Navbar/Navbar.module.css","api/api.js","components/Profile/Profile.module.css","assets/images/headerlogo.png","components/Shared/avatar.module.css","assets/images/banner.jpg","assets/images/preloader.svg","components/Shared/Validator.js","components/Shared/Textarea/Textarea.jsx","serviceWorker.js","components/Header/Header.jsx","redux/auth-reducer.ts","components/Header/HeaderComponent.jsx","components/Navbar/Friends/Friends.jsx","components/Navbar/Navbar.jsx","redux/profile-reducer.ts","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile/ProfileStatus/ProfileStatus.jsx","components/Profile/Profile/ProfileInfo.jsx","components/Profile/Profile/EditProfileInfo.jsx","components/Profile/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Login/LoginForm.jsx","components/Login/LoginPage.jsx","redux/app-reducer.ts","redux/friends-reducer.ts","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/Shared/Textarea/textarea.module.css","components/Shared/Preloader.jsx","components/Login/Login.module.css","components/Navbar/Friends/friends.module.css","components/Profile/Posts/Posts.module.css","assets/images/user.png","components/Header/Header.module.css","components/Profile/Posts/Post/Post.module.css","components/Shared/Avatar.jsx","hoc/withAuthRedirect.js","redux/dialog-reducer.ts","redux/users-reducer.ts"],"names":["module","exports","navbarWrap","nav","item","active","__webpack_require__","d","__webpack_exports__","usersAPI","authAPI","securityAPI","profileAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageCount","get","concat","then","response","data","getProfile","userID","console","log","followUser","id","post","unfollowUser","delete","getAuthMe","getLoggedMe","email","password","rememberMe","captcha","getLoggedOut","getCaptcha","getStatus","setStatus","status","put","updateUserPhoto","photo","formData","FormData","append","Content-Type","updateUserProfile","profile","content","banner","info","contacts","image__upload","p","avatar","required","maxLengthCreator","minLength8","value","maxLength","Textarea","_ref","input","meta","props","Object","_Users_dmitrijkuksenko_Documents_MyReact_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","error","touched","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","inputBlock","assign","errorSpan","Input","_ref2","Boolean","window","location","hostname","match","Header","react_default","header","src","headerlogo","alt","login__block","userData","isAuth","login","onClick","logOut","react_router_dom","to","initialData","captchaUrl","userAuthMe","state","action","type","objectSpread","payload","setMeAuth","dispatch","resultCode","_data$data","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","url","stop","this","_x","apply","HeaderComponentAPI","_this","setMeLoggedOut","render","components_Header_Header","React","Component","HeaderComponent","connect","authMe","page","Friends","friendItems","friends","map","friend","key","Avatar","name","title","list","Navbar","activeClassName","Navbar_Friends_Friends","initialState","postData","message","likeCount","profileReducer","newPost","toConsumableArray","photos","setUserStatus","getUserProfile","Post","like","maxLength50","PostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","button__group","Posts","postElemets","Posts_Post_Post","posts","values","onAddPost","postText","reverseOrder","PostsContainer","profileData","newPostText","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","_useState4","useEffect","autoFocus","onChange","e","currentTarget","onBlur","setProfileStatus","onDoubleClick","ProfileInfo","full__name","fullName","aboutMe","isOwner","ProfileStatus","lookingForAJob","lookingForAJobDescription","renderSocialLinks","activateEditMode","ReduxEditProfileForm","stylesError","commonError","FormSection","keys","Profile","userId","profileWrapper","profile__image","large","userPhoto","target","files","savePhoto","EditProfileInfo","initialValues","saveProfile","Profile_ProfileInfo","entries","caption","newUrl","test","href","getUserStatus","Preloader","ProfileAPI","Profile_Profile_Profile","params","Posts_PostsContainer","store","loggedUser","refreshProfile","prevProps","prevState","compose","withRouter","_callee2","_context2","_x2","_ref3","_callee3","errors","errorsObj","_context3","messages","reduce","defineProperty","slice","toLowerCase","stopSubmit","abrupt","Promise","reject","_x3","withAuthRedirect","News","news","Music","music","Settings","settings","maxLength20","LoginForm","submit","login__form","Login","Login_LoginForm","LoginPage","setMeLoggedIn","react_router","LoginPage_Login","_error","initializied","appReducer","friendsReducer","reducers","combineReducers","dialogsData","dialogReducer","friendsData","usersData","usersReducer","authReducer","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","withSuspense","react","fallback","DialogsContainer","lazy","bind","UsersContainer","App","setAppInitializeThunkCreator","isAppInitialized","Header_HeaderComponent","components_Navbar_Navbar","path","exact","from","ProfileContainer","AppContainer","promise","all","SamuraiJsApp","es","getState","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1___default","preloaderImage","_avatar_module_css__WEBPACK_IMPORTED_MODULE_1__","_avatar_module_css__WEBPACK_IMPORTED_MODULE_1___default","_assets_images_user_png__WEBPACK_IMPORTED_MODULE_2__","_assets_images_user_png__WEBPACK_IMPORTED_MODULE_2___default","mapStateToProps","RedirectComponent","_React$Component","_Users_dmitrijkuksenko_Documents_MyReact_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_dmitrijkuksenko_Documents_MyReact_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_dmitrijkuksenko_Documents_MyReact_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_Users_dmitrijkuksenko_Documents_MyReact_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_dmitrijkuksenko_Documents_MyReact_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_5___default","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","dialogData","messageData","direction","newMessage","_Users_dmitrijkuksenko_Documents_MyReact_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_dmitrijkuksenko_Documents_MyReact_react_way_of_samurai_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","addNewMessage","usersCount","usersPerPage","users","isFetching","usersInFollowingProgress","setUserInFollowingProgress","setCurrentPage","setToggleIsFetching","toggle","items","totalCount","onFollow","onUnfollow","user","followed","filter"],"mappings":"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","file":"static/js/main.526c4247.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarWrap\":\"Navbar_navbarWrap__3mUjK\",\"nav\":\"Navbar_nav__3LlXd\",\"item\":\"Navbar_item__pyho-\",\"active\":\"Navbar_active__3LvnP\"};","import * as axios from 'axios';\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n      'API-KEY': '932c0bbd-5279-433b-9a31-417bf30b4feb'\n    }\n});\n\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageCount = 10) {\n    return instance.get(`users?page=${currentPage}&count=${pageCount}`).then(response => {\n        return response.data;\n    })\n  },\n\n  getProfile(userID) {\n    console.log(\"this is old method, use profileAPI.getProfile\");\n    profileAPI.getProfile(userID);\n  },\n\n  followUser(id) {\n    return instance.post('follow/' + id).then(response => {\n        return response.data;\n    })\n  },\n\n  unfollowUser(id) {\n    return instance.delete('follow/' + id).then(response => {\n        return response.data;\n    })\n  }\n}\n\nexport const authAPI = {\n  getAuthMe() {\n    return instance.get('auth/me').then(response => {\n        return response.data;\n    })\n  },\n  getLoggedMe(email, password, rememberMe, captcha) {\n    return instance.post('auth/login', {email: email, password: password, rememberMe: rememberMe, captcha: captcha}).then(response => {\n        return response.data;\n    })\n  },\n  getLoggedOut() {\n    return instance.delete('auth/login').then(response => {\n        return response.data;\n    })\n  }\n}\n\nexport const securityAPI = {\n  getCaptcha() {\n    return instance.get('security/get-captcha-url').then(response => {\n        return response.data;\n    })\n  }\n}\n\nexport const profileAPI = {\n  getProfile(userID) {\n    return instance.get(`profile/${userID}`).then(response => {\n        return response.data;\n    })\n  },\n  getStatus(userID) {\n    return instance.get(`profile/status/${userID}`).then(response => {\n        return response.data;\n    })\n  },\n  setStatus(status) {\n    return instance.put(`profile/status`, {status: status}).then(response => {\n        return response.data;\n    })\n  },\n  updateUserPhoto(photo) {\n    const formData = new FormData();\n    formData.append(\"image\", photo);\n    return instance.put(`profile/photo`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n        return response.data;\n    })\n  },\n  updateUserProfile(profile) {\n    return instance.put(`profile`, profile).then(response => {\n      return response;\n    })\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__XHLmy\",\"banner\":\"Profile_banner__2ZVf8\",\"info\":\"Profile_info__3HA3Z\",\"contacts\":\"Profile_contacts__27ee4\",\"image__upload\":\"Profile_image__upload__2ZB87\"};","module.exports = __webpack_public_path__ + \"static/media/headerlogo.4fae85de.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"avatar_avatar__2c2-U\"};","module.exports = __webpack_public_path__ + \"static/media/banner.cce99c86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.74ab3a4b.svg\";","export const required = (value) => {\n  if (value) return undefined;\n  return \"Field is required.\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) return `Max Length is ${maxLength} symbols.`;\n}\n\nexport const minLength8 = (value) => {\n  if (value.length < 8) return `Minimum length is 8 symbols.`;\n}\n","import React from 'react';\nimport styles from './textarea.module.css';\n\nexport const Textarea = ({input, meta, ...props}) => {\n  const hasError = (meta.error && meta.touched);\n  return (\n    <div className={styles.inputBlock}>\n      <textarea className={hasError? styles.error : \"\"} {...input}{...props} />\n      {hasError ? <span className={styles.errorSpan}>{meta.error}</span> : \"\"}\n    </div>\n  )\n}\n\nexport const Input = ({input, meta, ...props}) => {\n  const hasError = (meta.error && meta.touched);\n  return (\n    <div className={styles.inputBlock}>\n      <input className={hasError? styles.error : \"\"} {...input}{...props} />\n      {hasError ? <span className={styles.errorSpan}>{meta.error}</span> : \"\"}\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport headerlogo from '../../assets/images/headerlogo.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return <header className={styles.header}>\r\n        <img src={headerlogo} alt=\"dogs and cats\" />\r\n        <div className={styles.login__block}>\r\n          {props.userData.isAuth ?\r\n            <div>{props.userData.login}<button onClick={props.logOut}>Log Out</button></div> :\r\n            <NavLink to=\"/login\">Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;\r\n","import { authAPI, securityAPI } from '../api/api';\nimport { stopSubmit } from 'redux-form';\n\nconst AUTH_ME = 'FOLLOW';\nconst LOGGED_OUT = 'LOGGED_OUT';\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\n\ntype initialStateType =  typeof initialData;\n\nlet initialData = {\n  id: null as number | null,\n  email: null as string | null,\n  login: null as string | null,\n  isAuth: false,\n  captchaUrl: null as string | null\n}\n\nconst userAuthMe = (state = initialData, action: any): initialStateType => {\n  switch(action.type) {\n    case AUTH_ME:\n      return {\n        ...state,\n        ...action.data,\n        isAuth: true\n      }\n    case LOGGED_OUT:\n      return {\n        ...state,\n        id: null,\n        email: null,\n        login: null,\n        isAuth: false\n      }\n    case GET_CAPTCHA_URL_SUCCESS:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default: return state;\n  }\n}\n\nexport default userAuthMe;\n\ntype SetUserAuthMeActionType = {\n  type: typeof AUTH_ME,\n  data: {\n    id: number | null,\n    email: string | null,\n    login: string | null,\n  }\n}\nexport const setUserAuthMe = (id: number, email: string, login: string): SetUserAuthMeActionType => {\n  return {type: AUTH_ME, data: {id, email, login}}\n}\n\ntype SetUserLoggedOutActionType = {\n  type: typeof LOGGED_OUT\n}\nconst setUserLoggedOut = (): SetUserLoggedOutActionType => {\n  return {type: LOGGED_OUT}\n}\n\ntype GetCaptchaUrlSuccessActionType = {\n  type: typeof GET_CAPTCHA_URL_SUCCESS,\n  payload: {\n    captchaUrl: string | null,\n  },\n}\nconst getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessActionType => {\n    return {\n      type: GET_CAPTCHA_URL_SUCCESS,\n      payload:\n        {captchaUrl}\n    }\n}\n\nexport const setMeAuth = () => {\n  return (dispatch: any) => {\n    return (\n      authAPI.getAuthMe().then((data: any) => {\n        if (data.resultCode === 0) {\n          let {email, id, login} = data.data;\n          dispatch(setUserAuthMe(id, email, login));\n        }\n      })\n    )\n  }\n}\n\nexport const setMeLoggedIn = (email: string | null, password: string | null, rememberMe = false, captcha = null) => {\n  return (dispatch: any) => {\n    authAPI.getLoggedMe(email, password, rememberMe, captcha).then((data: any) => {\n      if (data.resultCode === 0) {\n        dispatch(setMeAuth());\n      } else if (data.resultCode === 1) {\n        dispatch(stopSubmit(\"Login\", {_error: \"Incorrect email or password.\"}));\n      } else if (data.resultCode === 10) {\n        dispatch(stopSubmit(\"Login\", {_error: \"You need to enter captcha.\"}));\n        dispatch(getCaptcha());\n      }\n    })\n  }\n}\n\nexport const setMeLoggedOut = (page: number) => {\n  return (dispatch: any) => {\n    authAPI.getLoggedOut().then((data: any) => {\n      if (data.resultCode === 0) {\n        dispatch(setUserLoggedOut());\n      }\n    })\n  }\n}\n\nexport const getCaptcha = () => async (dispatch: any) => {\n  const response = await securityAPI.getCaptcha();\n  dispatch(getCaptchaUrlSuccess(response.url));\n}\n","import React from 'react';\r\nimport Header from './Header.jsx';\r\nimport {connect} from 'react-redux';\r\nimport {setMeAuth, setMeLoggedOut} from '../../redux/auth-reducer.ts';\r\n\r\nclass HeaderComponentAPI extends React.Component {\r\n    componentDidMount() {\r\n      this.props.setMeAuth();\r\n    }\r\n    logOut = () => {\r\n      this.props.setMeLoggedOut();\r\n    }\r\n    render = () => {\r\n      return (\r\n        <Header logOut={this.logOut} userData={this.props}/>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n      {\r\n        isAuth: state.authMe.isAuth,\r\n        login: state.authMe.login\r\n      }\r\n    )\r\n}\r\n\r\nconst HeaderComponent = connect(mapStateToProps, {setMeAuth, setMeLoggedOut})(HeaderComponentAPI);\r\n\r\nexport default HeaderComponent;\r\n","import React from 'react';\nimport styles from './friends.module.css';\nimport Avatar from './../../Shared/Avatar.jsx';\n\nconst Friends = (props) => {\n  let friendItems = props.friends.map((friend) => {\n    return (\n      <li key={friend.id} className={styles.item}> <Avatar key={friend.id} src={friend.avatar} name={friend.name} /> </li>\n    )\n  });\n  return (\n    <div className={styles.friends}>\n      <h3 className={styles.title}>Friends List</h3>\n      <ul className={styles.list}>\n        {friendItems}\n      </ul>\n    </div>\n  );\n}\n\n\nexport default Friends;\n","import React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Friends from './Friends/Friends.jsx';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n      <div className={styles.navbarWrap}>\r\n        <nav className={styles.nav}>\r\n          <div className={`${styles.item} ${styles.active}`}>\r\n              <NavLink to='/profile' activeClassName={styles.active}>My pet</NavLink>\r\n          </div>\r\n          <div className={styles.item}>\r\n              <NavLink to='/dialogs' activeClassName={styles.active}>Messages</NavLink>\r\n          </div>\r\n          <div className={styles.item}>\r\n              <NavLink to='/news' activeClassName={styles.active}>News</NavLink>\r\n          </div>\r\n          <div className={styles.item}>\r\n              <NavLink to='/music' activeClassName={styles.active}>Music</NavLink>\r\n          </div>\r\n          <div className={styles.item}>\r\n              <NavLink to='/settings' activeClassName={styles.active}>Settings</NavLink>\r\n          </div>\r\n          <div className={styles.item}>\r\n              <NavLink to='/users' activeClassName={styles.active}>Users</NavLink>\r\n          </div>\r\n        </nav>\r\n         <Friends friends={props.friends}/>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import { profileAPI } from '../api/api';\nimport { stopSubmit } from 'redux-form';\nimport {PhotosType, PostDataType, ProfileType} from \"../types/types\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER = 'SET-USER-PROFILE';\nconst SET_USER_STATUS = 'SET-USER-STATUS';\nconst SET_USER_PHOTO = 'SET-USER-PHOTO';\n\nlet initialState = {\n  postData: [\n    {id: 1, message: \"Woof!\", likeCount: 5},\n    {id: 2, message: \"Today am a good boy!\", likeCount: 8},\n    {id: 3, message: \"Where is my tail?\", likeCount: 9998}\n  ] as Array<PostDataType>,\n  profile: null as ProfileType | null,\n  status: \"\",\n};\n\nexport type InitialStateType = typeof initialState;\n\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\n  switch (action.type) {\n    case ADD_POST:\n        let newPost = {\n          id: 4,\n          message: action.newPost,\n          likeCount: 0\n      };\n      return {\n        ...state,\n        postData: [...state.postData, newPost]\n      };\n    case SET_USER:\n        return {\n          ...state,\n          profile: action.profile\n        };\n    case SET_USER_STATUS:\n        return {\n          ...state,\n          status: action.status\n        };\n    case SET_USER_PHOTO:\n      return {\n        ...state,\n        profile: {...state.profile, photos: action.photo} as ProfileType\n      };\n    default: return state;\n  }\n};\n\nexport default profileReducer;\n\ntype AddPostActionType = {\n  type: typeof ADD_POST,\n  newPost: string | null,\n};\nexport const onAddPost = (newPost: string): AddPostActionType => {\n  return { type: ADD_POST, newPost };\n};\ntype SetUserProfileActionType = {\n  type: typeof SET_USER,\n  profile: ProfileType,\n};\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => {\n  return { type: SET_USER, profile };\n};\ntype SetUserStatusActionType = {\n  type: typeof SET_USER_STATUS,\n  status: string | null,\n};\nexport const setUserStatus = (status: string): SetUserStatusActionType => {\n  return { type: SET_USER_STATUS, status }\n};\ntype OnSavePhotoActionType = {\n  type: typeof SET_USER_PHOTO,\n  photo: PhotosType,\n}\nexport const onSavePhoto = (photo: PhotosType): OnSavePhotoActionType => {\n  return { type: SET_USER_PHOTO, photo }\n};\n\nexport const getUserProfile = (id: number) => {\n  return (dispatch: any) => {\n    profileAPI.getProfile(id).then((data: any) => {\n      dispatch(setUserProfile(data));\n    })\n  }\n};\nexport const getUserStatus = (id: number) => async (dispatch: any) => {\n  const data = await profileAPI.getStatus(id);\n  dispatch(setUserStatus(data));\n};\n\nexport const setProfileStatus = (status: string) => async (dispatch: any) => {\n  const response = await profileAPI.setStatus(status);\n  if (response.resultCode === 0) {\n    dispatch(setUserStatus(status));\n  }\n};\n\nexport const savePhoto = (photo: PhotosType) => {\n  return (dispatch: any) => {\n    profileAPI.updateUserPhoto(photo).then((data: any) => {\n      if (data.resultCode === 0) {\n        dispatch(onSavePhoto(data.data.photos));\n      }\n    })\n  }\n};\n\nexport const saveProfile = (profile: any, userId: number) => async (dispatch: any) => {\n  const response = await profileAPI.updateUserProfile(profile);\n  if (response.data.resultCode === 0) {\n    dispatch(getUserProfile(userId));\n  } else if (response.data.resultCode === 1) {\n    const errors = response.data.messages.map((error: any) => error);\n    const errorsObj = errors.reduce((error: any, key: any)  => (\n      {...error, [key.slice(30, -1).toLowerCase()]: key.slice(0, 18)}\n    ), {});\n    dispatch(stopSubmit(\"edit-profile\", {contacts: errorsObj}));\n    return Promise.reject(errors[0]);\n  }\n};\n","import React from 'react';\nimport styles from './Post.module.css';\n\nconst Post = (props) => {\n  return <div className={styles.item}>\n    <div>\n      {props.message}\n      <p className={styles.like}>Likes: {props.likeCount}</p>\n    </div>\n  </div>\n}\n\nexport default Post;\n","import React from 'react';\nimport styles from './Posts.module.css';\nimport Post from './Post/Post.jsx';\nimport {Field, reduxForm} from 'redux-form';\nimport {maxLengthCreator, required} from './../../Shared/Validator.js';\nimport {Textarea} from './../../Shared/Textarea/Textarea.jsx';\n\nconst Posts = (props) => {\n  let postElemets = props.postData.map( post => <Post key={post.id} message={post.message} likeCount={post.likeCount}/>);\n  let addPost = (values) => {\n    props.onAddPost(values.postText);\n  }\n  return (\n    <div className={styles.posts}>\n      My posts\n      <div className={styles.item}>\n        New post\n        <PostFormRedux onSubmit={addPost}/>\n      </div>\n      <div className={styles.reverseOrder}>\n        {postElemets}\n      </div>\n    </div>\n  )\n}\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst PostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field name=\"postText\" component={Textarea} validate={[required, maxLength50]} placeholder=\"Add new post here.\"></Field>\n      <div className={styles.button__group}>\n        <button type=\"submit\">Add</button>\n        <button>Edit</button>\n        <button>Delete</button>\n      </div>\n    </form>\n  )\n}\n\nconst PostFormRedux = reduxForm({form: 'manageUserPost'})(PostForm)\n\nexport default Posts;\n","import {onAddPost} from '../../../redux/profile-reducer.ts';\nimport Posts from './Posts.jsx';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    postData: state.profileData.postData,\n    newPostText: state.profileData.newPostText\n  }\n}\n\nconst PostsContainer = connect(mapStateToProps, {onAddPost})(Posts);\n\nexport default PostsContainer;\n","import React, {useState, useEffect} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deActivateEditMode = () => {\n    setEditMode(false);\n    props.setProfileStatus(status);\n  }\n\n  const updateStatusText = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n  useEffect( () => {\n    setStatus(props.status);\n  }, [props.status])\n\n  if (!editMode) {\n    return <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\n  } else if (editMode) {\n    return <input autoFocus={true} onChange={updateStatusText} onBlur={deActivateEditMode} value={status} ></input>\n  }\n}\n\nexport default ProfileStatusWithHooks;\n","import React from 'react';\nimport styles from './../Profile.module.css';\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatus.jsx';\n\n\nconst ProfileInfo = (props) => {\n\n  return <div className={styles.info}>\n\n      <span className={styles.full__name}>{props.fullName}</span>\n      <span className={styles.full__name}>{props.aboutMe}</span>\n      <div className={styles.status}>\n        {props.isOwner ? <ProfileStatusWithHooks status={props.status} setProfileStatus={props.setProfileStatus}/> : props.status}\n      </div>\n      <div>\n        <span>{props.lookingForAJob ? 'Ищу работу.' : 'Уже работаю!'}</span>\n        <span> {props.lookingForAJobDescription}</span>\n      </div>\n      <div className={styles.contacts}>\n        {props.renderSocialLinks(props.contacts)}\n      </div>\n      {props.isOwner ? <button onClick={props.activateEditMode}>Edit</button> : ''}\n    </div>\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport {reduxForm, Field, FormSection} from 'redux-form';\nimport {Input, Textarea} from './../../Shared/Textarea/Textarea.jsx';\nimport {required} from './../../Shared/Validator.js';\nimport stylesError from './../../Login/Login.module.css';\n\nconst EditProfileForm = (props) => {\n  const { handleSubmit } = props;\n\n  const contactsInputs = (contacts) => {\n    return Object.keys(contacts).map(key => <div key={key}>\n                  {key}: <Field component={Input} type=\"text\" name={key} placeholder={key}></Field>\n              </div>\n        )\n  }\n\n  return <form onSubmit={handleSubmit}>\n      {props.error ? <span className={stylesError.commonError}>{props.error}</span> : \"\"}\n      <Field name=\"fullName\" validate={required} component={Input} placeholder=\"Full name\" type=\"text\"></Field>\n      <Field name=\"aboutMe\" validate={required} component={Textarea} placeholder=\"About Me\" type=\"text\"></Field>\n      <label>looking for a job: </label>\n      <Field name=\"lookingForAJob\" component={Input} type=\"checkbox\"></Field>\n      <Field name=\"lookingForAJobDescription\" validate={required} component={Textarea} placeholder=\"Job description\" type=\"text\"></Field>\n      <FormSection name=\"contacts\">\n        {contactsInputs(props.profile.contacts)}\n      </FormSection>\n\n\n    <button>Save</button>\n  </form>\n}\n\nconst ReduxEditProfileForm = reduxForm({\n  form: 'edit-profile'\n})(EditProfileForm)\n\nexport default ReduxEditProfileForm;\n","import React, {useState} from 'react';\nimport styles from './../Profile.module.css';\nimport banner from './../../../assets/images/banner.jpg';\nimport Preloader from './../../Shared/Preloader.jsx';\nimport ProfileInfo from './ProfileInfo.jsx';\nimport EditProfileForm from './EditProfileInfo.jsx';\nimport userPhoto from './../../../assets/images/user.png';\n\nconst Profile = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deActivateEditMode = () => {\n    setEditMode(false);\n  }\n\n  const getSavedPhoto = (e) => {\n    if (e.target.files.length > 0) {\n      props.savePhoto(e.target.files[0]);\n    }\n  }\n\n  const renderSocialLinks = (contacts) => {\n    return (\n      Object.entries(contacts).map(([caption, url]) => {\n          if (!url) {\n            return '';\n          }\n          const newUrl = /^http/.test(url) ? url : 'https://' + url;\n          return <span key={caption}>\n            {caption}: <a target=\"_new\" href={newUrl}>Link</a>\n          </span>\n      })\n    )\n  }\n\n  const onSubmit = (profile) => {\n      props.saveProfile(profile, props.userId).then(\n        () => {\n          deActivateEditMode();\n        }\n      );\n  }\n\n  if (!props.userId) {\n    return  <Preloader />\n  }\n  return  <div className={styles.profileWrapper}>\n      <div>\n        <img className={styles.banner} src={banner} alt=\"User banner\"/>\n      </div>\n      <div className={styles.info}>\n        <img className={styles.profile__image} src={!props.photos.large ? userPhoto : props.photos.large} alt={props.fullName + \"'s avatar\"} />\n        {props.isOwner ? <input type=\"file\" className={styles.image__upload} onChange={getSavedPhoto}/> : \"\" }\n        {editMode\n          ? <EditProfileForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\n          : <ProfileInfo {...props.profile}\n          renderSocialLinks={renderSocialLinks}\n          isOwner={props.isOwner}\n          savePhoto={props.savePhoto}\n          status={props.status}\n          setProfileStatus={props.setProfileStatus}\n          getUserStatus={props.getUserStatus}\n          activateEditMode={activateEditMode} />\n        }\n      </div>\n    </div>\n}\n\nexport default Profile;\n","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport PostsContainer from './Posts/PostsContainer.jsx';\r\nimport Profile from './Profile/Profile.jsx';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, setProfileStatus, savePhoto, saveProfile} from '../../redux/profile-reducer.ts'\r\nimport {withRouter} from 'react-router-dom';\r\nimport withAuthRedirect from './../../hoc/withAuthRedirect.js';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileAPI extends React.Component {\r\n    refreshProfile () {\r\n      let userID = this.props.match.params.userId;\r\n      if (!userID) {\r\n        if (this.props.isAuth) {\r\n          userID = this.props.loggedUser;\r\n          this.props.getUserProfile(userID);\r\n          this.props.getUserStatus(userID);\r\n        }\r\n      } else {\r\n          this.props.getUserProfile(userID);\r\n          this.props.getUserStatus(userID);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n        this.refreshProfile();\r\n      }\r\n    }\r\n\r\n    render = () => {\r\n      return <div className={styles.content}>\r\n            <Profile {...this.props.profileData.profile}\r\n              profile={this.props.profileData.profile}\r\n              isOwner={!this.props.match.params.userId}\r\n              savePhoto={this.props.savePhoto}\r\n              status={this.props.profileData.status}\r\n              setProfileStatus={this.props.setProfileStatus}\r\n              getUserStatus={this.props.getUserStatus}\r\n              saveProfile={this.props.saveProfile}\r\n              />\r\n            <PostsContainer\r\n              store={this.props.store}\r\n              dispatch={this.props.dispatch}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileData: state.profileData,\r\n        isAuth: state.authMe.isAuth,\r\n        loggedUser: state.authMe.id\r\n    }\r\n}\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, setProfileStatus, savePhoto, saveProfile}),\r\n  withAuthRedirect\r\n)(ProfileAPI);;\r\n","import React from 'react';\nimport styles from './news.module.css';\n\nconst News = () => {\n  return <div className={styles.news}>\n      News\n  </div>\n}\n\nexport default News;\n","import React from 'react';\nimport styles from './music.module.css';\n\nconst Music = () => {\n  return <div className={styles.music}>\n      Music\n  </div>\n}\n\nexport default Music;\n","import React from 'react';\nimport styles from './settings.module.css';\n\nconst Settings = () => {\n  return <div className={styles.settings}>\n      Settings\n  </div>\n}\n\nexport default Settings;\n","import React from 'react';\nimport styles from './Login.module.css';\nimport {Field} from 'redux-form';\nimport {required, maxLengthCreator, minLength8} from '../Shared/Validator';\nimport {Input} from '../Shared/Textarea/Textarea';\n\nconst maxLength20 = maxLengthCreator(20);\n\nconst LoginForm = (props) => {\n  const captchaUrl = props.captchaUrl;\n    return (\n      <form onSubmit={props.submit} className={styles.login__form}>\n          <Field name=\"email\" validate={[required, maxLength20]} component={Input} placeholder=\"Email\" type=\"text\"/>\n          <Field name=\"password\" validate={[required, minLength8]} component={Input} placeholder=\"Password\" type=\"password\"/>\n          <span><Field name=\"rememberMe\" component={Input} type=\"checkbox\"/> Remember me.</span>\n          {captchaUrl && <img className={styles.captcha} src={captchaUrl} alt=\"captcha\"/>}\n          {captchaUrl && <Field name=\"captcha\" validate={[required]} component={Input} placeholder=\"Enter the captcha\" type=\"text\"/>}\n          <button type=\"submit\">Submit</button>\n          {props.error ? <span className={styles.commonError}>{props.error}</span> : \"\"}\n        </form>\n    )\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport {reduxForm} from 'redux-form';\nimport LoginForm from './LoginForm.jsx';\nimport {setMeLoggedIn} from '../../redux/auth-reducer.ts'\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router';\n\nlet Login = (props) => {\n  const { handleSubmit } = props;\n  return  (\n    <LoginForm captchaUrl={props.captchaUrl} error={props.error} submit={handleSubmit}/>\n  )\n}\n\nLogin = reduxForm({\n  form: 'Login'\n})(Login)\n\nclass LoginPage extends React.Component {\n  submit = (values) => {\n    this.props.setMeLoggedIn(values.email, values.password, values.rememberMe, values.captcha);\n  }\n  render() {\n    return (this.props.isAuth? <Redirect to=\"/profile\"/> : <Login captchaUrl={this.props.captchaUrl} onSubmit={this.submit} />)\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      isAuth: state.authMe.isAuth,\n      captchaUrl: state.authMe.captchaUrl\n    }\n}\n\nexport default connect(mapStateToProps, {setMeLoggedIn})(LoginPage);\n","import { setMeAuth } from './auth-reducer';\n\nconst INITILIZE_APP = 'INITILIZE_APP';\n\nlet initialData = { initializied: false };\n\ntype InitialDataType = typeof initialData;\n\nconst appReducer = (state = initialData, action: any): InitialDataType => {\n  switch(action.type) {\n    case INITILIZE_APP:\n      return {\n        ...state,\n        initializied: true,\n      };\n    default: return state;\n  }\n};\n\ntype SetAppInitializeActionType = {\n  type: typeof INITILIZE_APP,\n};\n\nexport const setAppInitialize = (): SetAppInitializeActionType => {\n  return { type: INITILIZE_APP };\n};\n\nexport const setAppInitializeThunkCreator = () => (dispatch: any) => {\n  let promise = dispatch(setMeAuth());\n  Promise.all([promise]).then(() => {\n    dispatch(setAppInitialize());\n  });\n};\n\nexport default appReducer;","\ntype FriendDataType = {\n  id: number,\n  name: string,\n  avatar: string,\n}\n\nlet initialData =\n  [\n    {id: 1, name: \"Sharik\", avatar: 'https://source.unsplash.com/random/50x50/?random=3'},\n    {id: 2, name: \"Leva\", avatar: 'https://source.unsplash.com/random/50x50/?random=6'},\n    {id: 3, name: \"Maffin\", avatar: 'https://source.unsplash.com/random/50x50/?random=5'},\n    {id: 5, name: \"Oleja\", avatar: 'https://source.unsplash.com/random/50x50/?random=4'}\n  ] as Array<FriendDataType>\n;\n\ntype InitialDataType = typeof initialData;\n\n\nconst friendsReducer = (state = initialData, action: any): InitialDataType => {\n  return state;\n}\n\nexport default friendsReducer;\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport profileReducer from './profile-reducer.ts';\nimport friendsReducer from './friends-reducer.ts';\nimport dialogReducer from './dialog-reducer.ts';\nimport usersReducer from './users-reducer.ts';\nimport authReducer from './auth-reducer.ts';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from './app-reducer.ts';\n\nlet reducers = combineReducers({\n  profileData: profileReducer,\n  dialogsData: dialogReducer,\n  friendsData: friendsReducer,\n  usersData: usersReducer,\n  authMe: authReducer,\n  form: formReducer,\n  app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(\n  applyMiddleware(thunkMiddleware)\n));\n\nwindow.store = store;\n\nexport default store;\n","import React, {Suspense} from 'react';\nimport Preloader from './../components/Shared/Preloader.jsx';\n\nconst withSuspense = (Component) => {\n    return (props) => {\n      return (  <Suspense fallback={Preloader}>\n                <Component {...props} />\n        </Suspense>\n      )\n    }\n}\n\nexport default withSuspense;\n","import React from 'react';\nimport './App.css';\nimport HeaderComponent from './components/Header/HeaderComponent.jsx';\nimport Navbar from './components/Navbar/Navbar.jsx';\nimport WithUrlDataContainerComponent from './components/Profile/ProfileContainer.jsx';\nimport News from './components/News/News.jsx';\nimport Music from './components/Music/Music.jsx';\nimport Settings from './components/Settings/Settings.jsx';\nimport LoginPage from './components/Login/LoginPage.jsx';\nimport { setAppInitializeThunkCreator } from './redux/app-reducer.ts';\nimport Preloader from './components/Shared/Preloader.jsx';\nimport {compose} from 'redux';\nimport store from './redux/redux-store.js';\nimport {withRouter, HashRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport {Provider, connect} from 'react-redux';\nimport withSuspense from './hoc/withSuspense.js';\n\n// lazy loading:\n\nconst DialogsContainer = React.lazy(() => import ('./components/Dialogs/DialogsContainer.jsx'));\nconst UsersContainer = React.lazy(() => import ('./components/Users/UsersContainer.jsx'));\n\n\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.setAppInitializeThunkCreator();\n  }\n  render() {\n    if (!this.props.isAppInitialized) {\n      return <Preloader />\n    }\n    return (\n      <div className='app-wrapper'>\n        <HeaderComponent />\n        <Navbar friends={this.props.state.friendsData}/>\n        <Route path='/login' component={LoginPage}/>\n        <div className='app-wrapper-content'>\n          <Switch>\n            <Redirect exact from='/' to='/profile'> </Redirect>\n            <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n            <Route path='/profile/:userId?' render={ () =>\n              <WithUrlDataContainerComponent />}/>\n            <Route path='/news' component={News}/>\n            <Route path='/music' component={Music}/>\n            <Route path='/settings' component={Settings}/>\n            <Route path='/users' render={withSuspense(UsersContainer)}/>\n            <Route path='*' render={() => <div>Error 404</div>}/>\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAppInitialized: state.app.initializied\n  }\n}\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, {setAppInitializeThunkCreator})\n)(App);\n\nconst SamuraiJsApp = (props) => {\n  return <HashRouter>\n    <Provider store={store}>\n      <AppContainer state={store.getState()}/>\n    </Provider>\n  </HashRouter>\n}\n\nexport default SamuraiJsApp;\n","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SamuraiJsApp from './App.js';\n\n\nlet rerenderEntireTree = () => {\n  ReactDOM.render(<SamuraiJsApp />, document.getElementById('root'))\n}\n\nrerenderEntireTree();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock\":\"textarea_inputBlock__2i2cM\",\"error\":\"textarea_error__1N1S7\",\"errorSpan\":\"textarea_errorSpan__6F1Q4\"};","import React from 'react';\nimport preloaderImage from './../../assets/images/preloader.svg';\n\nconst Preloader = () => {\n    return <img src={preloaderImage} alt={'preloader'} />\n}\n\nexport default Preloader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__form\":\"Login_login__form__1nZfh\",\"captcha\":\"Login_captcha__1FpDN\",\"commonError\":\"Login_commonError__3cwO_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"friends_friends__3G830\",\"title\":\"friends_title__3ixvq\",\"list\":\"friends_list__1CP6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__1gtr3\",\"item\":\"Posts_item__3OjQU\",\"button__group\":\"Posts_button__group___pogQ\",\"reverseOrder\":\"Posts_reverseOrder__1DUpz\"};","module.exports = __webpack_public_path__ + \"static/media/user.c3b71170.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__13arE\",\"login__block\":\"Header_login__block__3uzhi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Uuqnv\",\"like\":\"Post_like__3du4n\"};","import React from 'react';\nimport styles from './avatar.module.css';\nimport userPhoto from './../../assets/images/user.png';\n\nconst Avatar = (props) => {\n  return (\n    <img className={styles.avatar} src={!props.src ? userPhoto : props.src} alt={props.name + \"'s avatar\"} />\n  )\n}\n\nexport default Avatar;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    isAuth: state.authMe.isAuth\n  }\n};\n\nconst withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n          if (!this.props.isAuth) return <Redirect to='/login' />\n          return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\n\n    return ConnectedRedirectComponent;\n}\n\nexport default withAuthRedirect;\n","const addMessage = 'ADD-MESSAGE';\n\ntype DialogDataType = {\n  id: number,\n  name: string,\n  avatar: string,\n}\n\ntype MessageDataType = {\n  id: number,\n  message: string,\n  direction: string,\n}\n\nlet initialData = {\n  dialogData: [\n    {id: 1, name: \"Sharik\", avatar: 'https://source.unsplash.com/random/50x50/?random=1'},\n    {id: 2, name: \"Popugai Ivan\", avatar: 'https://source.unsplash.com/random/50x50/?random=2'}\n  ] as Array<DialogDataType>,\n  messageData: [\n    {id: 1, message: \"Zdarova!\", direction: \"in\"},\n    {id: 2, message: \"Kuda propal?\", direction: \"in\"},\n    {id: 3, message: \"Go v basik?!\", direction: \"in\"},\n    {id: 4, message: \"Zavtra Go\", direction: \"out\"}\n  ] as Array <MessageDataType>\n};\n\ntype InitialDataType = typeof initialData\n\nconst dialogReducer = (state = initialData, action: any): InitialDataType => {\n  switch (action.type) {\n    case addMessage:\n      let newMessage = {\n        id: 5,\n        message: action.newMessage,\n        direction: 'out'\n      }\n      return {\n        ...state,\n        messageData: [...state.messageData, newMessage]\n      }\n    default: return state;\n  }\n}\n\nexport default dialogReducer;\n\ntype AddNewMessageActionType = {\n  type: typeof addMessage,\n  newMessage: string,\n}\nexport const addNewMessage = (newMessage: string): AddNewMessageActionType => {\n  return {type: addMessage, newMessage};\n}\n","import { usersAPI } from '../api/api';\nimport { UsersType } from \"../types/types\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst USERS_COUNT = 'USERS_COUNT';\nconst CURRENT_PAGE = 'CURRENT_PAGE';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS';\n\n\ntype InitialStateType = typeof initialData;\n\nlet initialData = {\n  usersCount: 0,\n  currentPage: 1,\n  usersPerPage: 10,\n  users: [] as Array<UsersType>,\n  isFetching: false,\n  usersInFollowingProgress: [] as Array<number>,\n}\n\nconst usersReducer = (state = initialData, action: any): InitialStateType => {\n  switch(action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map(user => {\n          if(user.id === action.id) {\n            return {\n              ...user,\n              followed: true\n            }\n          }\n          return user;\n        }) as Array<UsersType>\n      }\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map(user => {\n          if (user.id === action.id) {\n            return {\n              ...user,\n              followed: false\n            }\n          }\n          return user;\n        }) as Array<UsersType>\n      }\n    case SET_USERS:\n      return {\n        ...state,\n        users: [...action.users]\n      }\n    case USERS_COUNT:\n      return {\n        ...state,\n        usersCount: action.usersCount\n      }\n    case CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.page\n      }\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.toggle\n      }\n    case FOLLOWING_IN_PROGRESS:\n      return {\n        ...state,\n        usersInFollowingProgress: action.isFetching\n            ? [...state.usersInFollowingProgress, action.userID]\n            : state.usersInFollowingProgress.filter((id) => id !== action.userID)\n      }\n    default: return state;\n  }\n}\n\ntype FollowUserActionType = {\n  type: typeof FOLLOW,\n  id: number,\n}\nconst followUser = (userID: number): FollowUserActionType => {\n    return {type: FOLLOW, id: userID}\n}\n\ntype UnFollowUserActionType = {\n  type: typeof UNFOLLOW,\n  id: number,\n}\nconst unFollowUser = (userID: number): UnFollowUserActionType => {\n    return {type: UNFOLLOW, id: userID}\n}\n\ntype setUsersActionType = {\n  type: typeof SET_USERS,\n  users: Array<UsersType>,\n}\nconst setUsers = (users: Array<UsersType>): setUsersActionType => {\n    return {type: SET_USERS, users}\n}\n\ntype SetUsersCountActionType = {\n  type: typeof USERS_COUNT,\n  usersCount: number,\n}\nconst setUsersCount = (usersCount: number): SetUsersCountActionType => {\n    return {type: USERS_COUNT, usersCount}\n}\n\ntype SetUserInFollowingProgressActionType = {\n  type: typeof FOLLOWING_IN_PROGRESS,\n  isFetching: boolean,\n  userID: number,\n}\nconst setUserInFollowingProgress = (isFetching: boolean, userID: number): SetUserInFollowingProgressActionType => {\n    return {type: FOLLOWING_IN_PROGRESS, isFetching, userID}\n}\n\ntype SetCurrentPageActionType = {\n  type: typeof CURRENT_PAGE,\n  page: number,\n}\nexport const setCurrentPage = (page: number): SetCurrentPageActionType => {\n    return {type: CURRENT_PAGE, page}\n}\n\ntype SetToggleIsFetchingActionType = {\n  type: typeof TOGGLE_IS_FETCHING,\n  toggle: boolean,\n}\nexport const setToggleIsFetching = (toggle: boolean): SetToggleIsFetchingActionType => {\n    return {type: TOGGLE_IS_FETCHING, toggle}\n}\n\nexport const getUsers = (currentPage: number, usersPerPage: number) => {\n  return (dispatch: any) => {\n    dispatch(setToggleIsFetching(true));\n    usersAPI.getUsers(currentPage, usersPerPage).then((data: any) => {\n        dispatch(setToggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setUsersCount(data.totalCount));\n    })\n  }\n}\nexport const onFollow = (id: number) => {\n  return (dispatch: any) => {\n    dispatch(setUserInFollowingProgress(true, id));\n    usersAPI.followUser(id).then((data: any) => {\n      if (data.resultCode === 0) {\n        dispatch(followUser(id));\n      }\n      dispatch(setUserInFollowingProgress(false, id));\n    })\n  }\n}\n\nexport const onUnfollow = (id: number) => {\n  return (dispatch: any) => {\n    dispatch(setUserInFollowingProgress(true, id));\n    usersAPI.unfollowUser(id).then((data: any) => {\n      if (data.resultCode === 0) {\n        dispatch(unFollowUser(id));\n      }\n      dispatch(setUserInFollowingProgress(false, id));\n    })\n  }\n}\n\nexport default usersReducer;\n"],"sourceRoot":""}